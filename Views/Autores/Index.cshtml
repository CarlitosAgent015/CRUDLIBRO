@model IEnumerable<CRUDROLES.Models.Autor>


@{
    ViewData["Title"] = "Index";
}

<h1 style="text-align: center; font-size: 32px;">Lista de Autores</h1>

<style>
	.botonCopiar {
		background-color: #cccccc;
	}
	.botonCopiar:hover {
		background-color: #b3b3b3;
	}

	.botonCsv {
		background-color: #5782F4;
	}
	.botonCsv:hover {
		background-color: #3e66b3;
	}

	.botonExcel {
		background-color: #A9D56E;
	}
	.botonExcel:hover {
		background-color: #267a1e;
	}

	.botonPdf {
		background-color: #A8D5BA;
	}
	.botonPdf:hover {
		background-color: #8ac7a6;
	}

	.botonPrint {
		background-color: #C2CB38;
	}
	.botonPrint:hover {
		background-color: #a0a92f;
	}

	.botonColvis {
		background-color: #8E635D;
	}
	.botonColvis:hover {
		background-color: #73524a;
	}
</style>

<style>
  thead {
    background-color: #cce0ff;
    color: #333;
  }

</style>




<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<!-- Botón Crear Nuevo -->
<p >
    <a class="btn btn-success" asp-action="Create">Crear autor</a>
</p>

<div class="table-container">
    <table class="table table-striped table-hover" id="example">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Nombre)</th>
                <th>@Html.DisplayNameFor(model => model.Apellido)</th>
                <th>@Html.DisplayNameFor(model => model.Nacionalidad)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model) {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Nombre)</td>
                <td>@Html.DisplayFor(modelItem => item.Apellido)</td>
                <td>@Html.DisplayFor(modelItem => item.Nacionalidad)</td>
                    <td>
                        <div class="d-flex justify-content-around">
                            <a class="btn btn-secondary table-action-btn" asp-action="Edit" asp-route-id="@item.Idautor" title="Editar">
            					<img src="images/editar.png" alt="Editar" style="width: 16px; height: 16px;">
                            </a>
                            <a class="btn btn-info table-action-btn" asp-action="Details" asp-route-id="@item.Idautor" title="Detalles">
								<img src="images/buscar.png" alt="Detalles tan bonitos" style="width: 16px; height: 16px;">
                            </a>
                            <!-- Botón Eliminar con SweetAlert -->
                            <form id="deleteForm-@item.Idautor" method="post" asp-action="Delete" asp-route-id="@item.Idautor" style="display:none;">
                                <button type="submit" id="deleteButton-@item.Idautor"></button>
                            </form>
                            <a class="btn btn-danger table-action-btn"
                                href="javascript:void(0);"
                                onclick="confirmDelete(@item.Idautor)">
							   	    <img src="images/borrar.png" alt="Deletes" style="width: 16px; height: 16px;">
                                <i class="fi fi-tr-trash-xmark"></i>
                            </a>
                        </div>
                    </td>

            </tr>
        }
        </tbody>
    </table>
</div>

<script>

    function confirmDelete(id) {
        Swal.fire({
            title: '¿Estás seguro?',
            text: "¡No podrás revertir esta acción!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Sí, eliminar',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/Autors/DeleteConfirmed/' + id,  // Asegúrate de que la URL sea correcta
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Eliminado',
                                text: response.message
                            }).then(() => {
                                location.reload();  // Recarga la página después de la eliminación
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'No se pudo eliminar',
                                text: response.errorMessage
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Ocurrió un error al intentar eliminar el autor.'
                        });
                    }
                });
            }
        });
        return false; // Evita la acción por defecto
    }

    new DataTable('#example', {
		layout: {
		topStart: {
    buttons: [
        {
        extend:'copy',
        text:'<img src="images/copiar.png" alt="Copiar" style="width: 16px; height: 16px;"> Copiar',
        className:'botonCopiar btn'
        },
        {
        extend:'csv',
        text:'<img src="images/csv.png" alt="CSV" style="width: 16px; height: 16px;"> Exportar CSV',
        className:'botonCsv btn'
        },
        {
        extend:'excel',
        text:'<img src="images/excel.png" alt="Excel" style="width: 16px; height: 16px;"> Exportar Excel',
        className:'botonExcel btn'
        },
        {
        extend : 'pdf',
        text:'<img src="images/pdf.png" alt="PDF" style="width: 16px; height: 16px;"> Exportar PDF',
        className:'botonPdf btn',
		},
        {
        extend:'print',
        text:'<img src="images/imprimir.png" alt="Imprimir" style="width: 16px; height: 16px;"> Imprimir',
        className:'botonPrint btn'
        },
        {
        extend:'colvis',
        text:'<img src="images/filtrar.png" alt="Filtrar" style="width: 16px; height: 16px;"> Filtrar',
        className:'botonColvis btn'
        }

]
}
		},
		language:{
			url: 'https://cdn.datatables.net/plug-ins/2.0.2/i18n/es-ES.json',
		},
		scrollX:true,
		initComplete: function(json,settings){
			$(".dt-buttons").removeClass("dt-buttons");
			//agregar clase para añadir estilos 
			$(".dt-button").addClass("botones");
			//Elimina la clase de los estilos por defecto de tadatables
			$(".dt-button").addClass("botones");
		}
	});
</script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    @if (ViewData["IsbnError"] != null)
    {
        <script>
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: '@ViewData["IsbnError"]',
                confirmButtonText: 'Aceptar'
            });
        </script>
    }
}